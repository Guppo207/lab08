name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          dpkg-dev \
          rpm \
          lcov
        
    - name: Configure project
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
      
    - name: Build project
      run: cmake --build build --config Release --parallel $(nproc)
      
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure
        
    - name: Generate coverage report
      if: success() && matrix.coverage == 'ON'
      run: |
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        genhtml coverage.info --output-directory coverage_report
        
    - name: Create packages
      run: |
        cd build
        cpack -G TGZ
        cpack -G DEB
        cpack -G RPM
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-packages
        path: |
          build/*.tar.gz
          build/*.deb
          build/*.rpm
          build/coverage_report/**
        retention-days: 5

  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup WiX
      run: |
        choco install wixtoolset -y
        echo "WIX=C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $GITHUB_ENV
        
    - name: Prepare license
      shell: pwsh
      run: |
        if (!(Test-Path "LICENSE.rtf")) {
            " " | Out-File -Encoding ASCII "LICENSE.rtf"
        }
    
    - name: Configure and build
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release
        
    - name: Generate MSI
      run: |
        cd build
        cpack -G WIX -C Release -V --debug

  macos-build:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Configure project
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
      
    - name: Build project
      run: cmake --build build --config Release --parallel 2
      
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure
        
    - name: Create DMG package
      run: |
        cd build
        cpack -G DragNDrop
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-packages
        path: |
          build/*.dmg
          build/Testing/**
        retention-days: 5
        
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io docker-compose
        sudo systemctl enable --now docker
            
    - name: Build Docker image
      run: |
        docker build -t banking-app .
        
    - name: Run tests in container
      run: |
        docker run --rm banking-app sh -c "cd /app/build && ctest --output-on-failure"
        
    - name: Extract coverage report
      if: success()
      run: |
        docker create --name banking-container banking-app
        docker cp banking-container:/app/build/coverage.info ./docker_coverage.info
        docker cp banking-container:/app/build/coverage_report ./docker_coverage_report
        docker rm banking-container

        lcov --remove ./docker_coverage.info '/usr/*' --output-file ./docker_coverage.info
        genhtml ./docker_coverage.info --output-directory ./docker_coverage_report
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: docker-coverage-report
        path: |
          ./docker_coverage.info
          ./docker_coverage_report/**
        retention-days: 5
